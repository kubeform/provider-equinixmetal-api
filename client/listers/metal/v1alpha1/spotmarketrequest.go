/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-equinixmetal-api/apis/metal/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SpotMarketRequestLister helps list SpotMarketRequests.
// All objects returned here must be treated as read-only.
type SpotMarketRequestLister interface {
	// List lists all SpotMarketRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SpotMarketRequest, err error)
	// SpotMarketRequests returns an object that can list and get SpotMarketRequests.
	SpotMarketRequests(namespace string) SpotMarketRequestNamespaceLister
	SpotMarketRequestListerExpansion
}

// spotMarketRequestLister implements the SpotMarketRequestLister interface.
type spotMarketRequestLister struct {
	indexer cache.Indexer
}

// NewSpotMarketRequestLister returns a new SpotMarketRequestLister.
func NewSpotMarketRequestLister(indexer cache.Indexer) SpotMarketRequestLister {
	return &spotMarketRequestLister{indexer: indexer}
}

// List lists all SpotMarketRequests in the indexer.
func (s *spotMarketRequestLister) List(selector labels.Selector) (ret []*v1alpha1.SpotMarketRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SpotMarketRequest))
	})
	return ret, err
}

// SpotMarketRequests returns an object that can list and get SpotMarketRequests.
func (s *spotMarketRequestLister) SpotMarketRequests(namespace string) SpotMarketRequestNamespaceLister {
	return spotMarketRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SpotMarketRequestNamespaceLister helps list and get SpotMarketRequests.
// All objects returned here must be treated as read-only.
type SpotMarketRequestNamespaceLister interface {
	// List lists all SpotMarketRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SpotMarketRequest, err error)
	// Get retrieves the SpotMarketRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SpotMarketRequest, error)
	SpotMarketRequestNamespaceListerExpansion
}

// spotMarketRequestNamespaceLister implements the SpotMarketRequestNamespaceLister
// interface.
type spotMarketRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SpotMarketRequests in the indexer for a given namespace.
func (s spotMarketRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SpotMarketRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SpotMarketRequest))
	})
	return ret, err
}

// Get retrieves the SpotMarketRequest from the indexer for a given namespace and name.
func (s spotMarketRequestNamespaceLister) Get(name string) (*v1alpha1.SpotMarketRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("spotmarketrequest"), name)
	}
	return obj.(*v1alpha1.SpotMarketRequest), nil
}
