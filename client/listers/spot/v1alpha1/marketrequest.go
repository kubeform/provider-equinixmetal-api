/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-equinixmetal-api/apis/spot/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MarketRequestLister helps list MarketRequests.
// All objects returned here must be treated as read-only.
type MarketRequestLister interface {
	// List lists all MarketRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MarketRequest, err error)
	// MarketRequests returns an object that can list and get MarketRequests.
	MarketRequests(namespace string) MarketRequestNamespaceLister
	MarketRequestListerExpansion
}

// marketRequestLister implements the MarketRequestLister interface.
type marketRequestLister struct {
	indexer cache.Indexer
}

// NewMarketRequestLister returns a new MarketRequestLister.
func NewMarketRequestLister(indexer cache.Indexer) MarketRequestLister {
	return &marketRequestLister{indexer: indexer}
}

// List lists all MarketRequests in the indexer.
func (s *marketRequestLister) List(selector labels.Selector) (ret []*v1alpha1.MarketRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MarketRequest))
	})
	return ret, err
}

// MarketRequests returns an object that can list and get MarketRequests.
func (s *marketRequestLister) MarketRequests(namespace string) MarketRequestNamespaceLister {
	return marketRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MarketRequestNamespaceLister helps list and get MarketRequests.
// All objects returned here must be treated as read-only.
type MarketRequestNamespaceLister interface {
	// List lists all MarketRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MarketRequest, err error)
	// Get retrieves the MarketRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MarketRequest, error)
	MarketRequestNamespaceListerExpansion
}

// marketRequestNamespaceLister implements the MarketRequestNamespaceLister
// interface.
type marketRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MarketRequests in the indexer for a given namespace.
func (s marketRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MarketRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MarketRequest))
	})
	return ret, err
}

// Get retrieves the MarketRequest from the indexer for a given namespace and name.
func (s marketRequestNamespaceLister) Get(name string) (*v1alpha1.MarketRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("marketrequest"), name)
	}
	return obj.(*v1alpha1.MarketRequest), nil
}
