/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-equinixmetal-api/apis/port/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PortLister helps list Ports.
// All objects returned here must be treated as read-only.
type PortLister interface {
	// List lists all Ports in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Port, err error)
	// Ports returns an object that can list and get Ports.
	Ports(namespace string) PortNamespaceLister
	PortListerExpansion
}

// portLister implements the PortLister interface.
type portLister struct {
	indexer cache.Indexer
}

// NewPortLister returns a new PortLister.
func NewPortLister(indexer cache.Indexer) PortLister {
	return &portLister{indexer: indexer}
}

// List lists all Ports in the indexer.
func (s *portLister) List(selector labels.Selector) (ret []*v1alpha1.Port, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Port))
	})
	return ret, err
}

// Ports returns an object that can list and get Ports.
func (s *portLister) Ports(namespace string) PortNamespaceLister {
	return portNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PortNamespaceLister helps list and get Ports.
// All objects returned here must be treated as read-only.
type PortNamespaceLister interface {
	// List lists all Ports in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Port, err error)
	// Get retrieves the Port from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Port, error)
	PortNamespaceListerExpansion
}

// portNamespaceLister implements the PortNamespaceLister
// interface.
type portNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Ports in the indexer for a given namespace.
func (s portNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Port, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Port))
	})
	return ret, err
}

// Get retrieves the Port from the indexer for a given namespace and name.
func (s portNamespaceLister) Get(name string) (*v1alpha1.Port, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("port"), name)
	}
	return obj.(*v1alpha1.Port), nil
}
